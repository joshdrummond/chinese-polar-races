/*    Chinese Polar Races    Joshua Drummond    The Review Screen*/import java.applet.*;import java.awt.*;import java.awt.event.*;import java.util.Random;public class CPRReviewFrame    extends Frame{    private CPRImageCanvas pix;    private Panel panCenter;    private Label lblNumber;    private Label lblEnglish;    private Label lblForeign;//    private Label lblLanguage;    private TextField tfNumber;    private Label lblEnglishHead;    private Label lblForeignHead;    private Label lblLesson;    private Choice chLesson;    private Checkbox cbxShowCharacter;//    private Choice chLanguage;    private Button btnPrev;    private Button btnNext;    private Button btnRandom;    private Button btnSound;//    private Button btnClose;    private static int cmdPrev = 0;    private static int cmdNext = 1;    private static int cmdRandom = 2;    private static int cmdSound = 3;    private static int cmdClose = 4;    private int currentNum;    private Panel p1, p2, p3, p4, p5, p6;    private Random random;    private CPRVocab words;    private int intMaxWord;    public CPRReviewFrame()    {        super("Review Screen");       // this.setSize(600,440);  //      center();        this.addWindowListener(new CPRWindowAdapter(this));        this.setLayout(new BorderLayout(5,5));        words = new CPRVocab(CPRVocab.MAX_LESSON); //getMax()); //SPANISH);        panCenter = new Panel();        panCenter.setLayout(new GridLayout(5,1,5,5));        this.setBackground(Color.black);         random = new Random();       /* chLanguage = new Choice();        chLanguage.addItemListener(new ItemListener()        {           public void itemStateChanged(ItemEvent e)           {              doChoiceChange();           }        });        //chLanguage.setFont(new Font("Serif", Font.BOLD, 14));        //initChoice();        */        pix = new CPRImageCanvas(CPR.app.getImage(CPR.app.getDocumentBase(), "blank.gif"), 100, 100);        btnPrev = new Button(" <- Previous ");        btnPrev.setBackground(Color.white);        btnPrev.setFont(new Font("SansSerif", Font.BOLD, 14));        btnPrev.addActionListener(new MyButtonListener(cmdPrev));        btnNext = new Button("   Next ->   ");        btnNext.setBackground(Color.white);        btnNext.addActionListener(new MyButtonListener(cmdNext));        btnNext.setFont(new Font("SansSerif", Font.BOLD, 14));        btnRandom = new Button("   Random   ");        btnRandom.setBackground(Color.white);        btnRandom.addActionListener(new MyButtonListener(cmdRandom));        btnRandom.setFont(new Font("SansSerif", Font.BOLD, 14));        btnSound = new Button("   Listen   ");        btnSound.setBackground(Color.white);        btnSound.addActionListener(new MyButtonListener(cmdSound));        btnSound.setFont(new Font("SansSerif", Font.BOLD, 14));        /*btnClose = new Button("   Close   ");        btnClose.setBackground(Color.white);        btnClose.addActionListener(new MyButtonListener(cmdClose)); */        lblEnglishHead = new Label("English : ",Label.RIGHT);        lblEnglishHead.setForeground(Color.white);        lblEnglishHead.setFont(new Font("SansSerif", Font.BOLD, 14));        lblForeignHead = new Label("Pinyin : ",Label.RIGHT);        lblForeignHead.setForeground(Color.white);        lblForeignHead.setFont(new Font("SansSerif", Font.BOLD, 14));    //    lblLanguage = new Label("Language : ",Label.RIGHT);     //   lblLanguage.setForeground(Color.white);      //  lblLanguage.setFont(new Font("SansSerif", Font.BOLD, 14));        lblNumber = new Label("Word #");        lblNumber.setForeground(Color.white);        lblNumber.setFont(new Font("SansSerif", Font.BOLD, 14));        lblLesson = new Label("Lesson:", Label.RIGHT);        lblLesson.setForeground(Color.white);        lblLesson.setFont(new Font("SansSerif", Font.BOLD, 14));        cbxShowCharacter = new Checkbox("Display Character", true);        cbxShowCharacter.setForeground(Color.white);        cbxShowCharacter.addItemListener(new ItemListener()        {           public void itemStateChanged(ItemEvent e)           {              doCheckboxChange();           }        });        chLesson = new Choice();        chLesson.setFont(new Font("SansSerif", Font.BOLD, 14));        for (int i = 0; i < CPRVocab.MAX_LESSON; i++)           chLesson.addItem(""+(i+1));        chLesson.addItemListener(new ItemListener()        {           public void itemStateChanged(ItemEvent e)           {              doLessonChange();           }        });        chLesson.select(chLesson.getItemCount() - 1);        lblEnglish = new Label();        lblEnglish.setFont(new Font("Serif",Font.BOLD,14));        lblEnglish.setForeground(Color.white);        //English.setEditable(false);        lblForeign = new Label();        lblForeign.setFont(new Font("Serif",Font.BOLD,14));        lblForeign.setForeground(Color.white);        tfNumber = new TextField(10);        tfNumber.setFont(new Font("Serif", Font.BOLD, 14));        tfNumber.addActionListener(new ActionListener()        {            public void actionPerformed(ActionEvent e)            {               doHitEnter();            }        });        tfNumber.setForeground(Color.white);        p1 = new Panel();        //p1.setLayout(new GridLayout(1,2));        p1.setLayout(new BorderLayout()); //GridLayout(1,2));        p1.add(lblEnglishHead, "West");        p1.add(lblEnglish, "Center");        p2 = new Panel();        p2.setLayout(new BorderLayout()); //GridLayout(1,2));        //p2.setLayout(new GridLayout(1,2));        p2.add(lblForeignHead, "West");        p2.add(lblForeign, "Center");        p3 = new Panel();        p3.add(lblNumber);        p3.add(tfNumber);        p4 = new Panel();        p4.add(btnPrev);        p4.add(btnNext);        p4.add(btnRandom);        p4.add(btnSound);        p5 = new Panel();     //   p5.setLayout(new GridLayout(1,0,5,5));        p5.add(lblLesson);        p5.add(chLesson);        p5.add(new Label("            "));        p5.add(cbxShowCharacter);       // p5.setLayout(new GridLayout(1,1));        this.add(pix,"North");        panCenter.add(p1); panCenter.add(p2); panCenter.add(p3); panCenter.add(p5);        panCenter.add(p4);        this.add(panCenter,"Center");//        this.setLocation(100,100);//pack();        this.setSize(500,375);        center();        currentNum = 0;        tfNumber.setText(""+currentNum);        lblEnglish.setText(words.getEnglish(currentNum));        lblForeign.setText(words.getForeign(currentNum));        pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "cpr"+currentNum+".gif"));        this.setVisible(true);    }/*    private void initChoice()    {       chLanguage.addItem("Spanish");       chLanguage.addItem("Korean");       chLanguage.addItem("Japanese");       chLanguage.addItem("Chinese");       chLanguage.addItem("French");       chLanguage.addItem("German");    }*//*    private void doChoiceChange()    {       String strLanguage = chLanguage.getSelectedItem();       if (strLanguage.equals("Spanish"))          words.loadSpanishWords();       else if (strLanguage.equals("Korean"))          words.loadKoreanWords();       else if (strLanguage.equals("Japanese"))          words.loadJapaneseWords();       else if (strLanguage.equals("Chinese"))          words.loadChineseWords();       else if (strLanguage.equals("French"))          words.loadFrenchWords();       else if (strLanguage.equals("German"))          words.loadGermanWords();       if (!words.isPix())          pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "blank.jpg"));       doHitEnter();    }*/        private void doHitEnter()        {          int temp = currentNum;          try          {            currentNum = (Integer.valueOf(tfNumber.getText())).intValue();            if (currentNum >= 0 && currentNum <= words.getLessonMax())            {                lblEnglish.setText(words.getEnglish(currentNum));                lblForeign.setText(words.getForeign(currentNum));                if (cbxShowCharacter.getState())                    pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "cpr"+currentNum+".gif"));                repaint();            }            else            {                tfNumber.setText(""+temp);            }          }          catch (NumberFormatException exp)           {             tfNumber.setText(""+temp);          }        }       private void doCheckboxChange()       {           if (cbxShowCharacter.getState())               // Show character               pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "cpr"+currentNum+".gif"));           else               // Don't show character               pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "blank.gif"));           repaint();       }       private void doLessonChange()       {           words.setLesson((Integer.valueOf(chLesson.getSelectedItem())).intValue());       }    private class MyButtonListener        implements ActionListener    {        private int cmd;        public MyButtonListener(int cmd)        {           this.cmd = cmd;        }        public void actionPerformed(ActionEvent e)        {           doHitButton(cmd);        }    }    private void doHitButton(int cmd)    {            if (cmd == cmdClose)            {                setVisible(false);                dispose();            }            else if (cmd == cmdPrev)            {                currentNum--;                if (currentNum < 0)                    currentNum = words.getLessonMax();                tfNumber.setText(""+currentNum);                lblEnglish.setText(words.getEnglish(currentNum));                lblForeign.setText(words.getForeign(currentNum));                if (cbxShowCharacter.getState())                   pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "cpr"+currentNum+".gif"));                repaint();            }            else if (cmd == cmdNext)            {                currentNum++;                if (currentNum > words.getLessonMax())                    currentNum = 0;                tfNumber.setText(""+currentNum);                lblEnglish.setText(words.getEnglish(currentNum));                lblForeign.setText(words.getForeign(currentNum));                if (cbxShowCharacter.getState())                   pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "cpr"+currentNum+".gif"));                repaint();            }            else if (cmd == cmdRandom)            {                currentNum = (int)(random.nextFloat() * (words.getLessonMax()+1));                tfNumber.setText(""+currentNum);                lblEnglish.setText(words.getEnglish(currentNum));                lblForeign.setText(words.getForeign(currentNum));                if (cbxShowCharacter.getState())                   pix.setImage(CPR.app.getImage(CPR.app.getDocumentBase(), "cpr"+currentNum+".gif"));                repaint();            }            else if (cmd == cmdSound)            {                AudioClip sound = CPR.app.getAudioClip(CPR.app.getDocumentBase(), "cpr"+currentNum+".au");                sound.play();            }      }    private void center()    {      // Locate center and place frame there.      Dimension dimScreenSize = getToolkit().getScreenSize();      Dimension dimDialogSize = getSize();      setLocation((dimScreenSize.width - dimDialogSize.width) / 2,         (dimScreenSize.height - dimDialogSize.height) / 2);    }}